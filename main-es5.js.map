{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chart/chart.component.ts","webpack:///src/app/chart/chart.component.html","webpack:///src/app/clarity-tree/clarity-tree.component.ts","webpack:///src/app/clarity-tree/clarity-tree.component.html","webpack:///src/app/kendo-tree/kendo-tree.component.ts","webpack:///src/app/kendo-tree/kendo-tree.component.html","webpack:///src/app/tree-data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useValue","declarations","providers","bootstrap","ChartComponent","http","Highcharts","chartConstructor","chartOptions","series","text","yAxis","labels","formatter","Math","round","value","xAxis","categories","plotOptions","line","dataLabels","enabled","chartCallback","chart","updateFlag","oneToOneFlag","runOutsideAngular","get","subscribe","results","kendoCreate","clarityCreate","kendoExpand","clarityExpand","forEach","result","count","parseInt","type","expand","push","console","log","map","time","name","data","sort","a","b","ClarityTreeComponent","service","getItems","fetchChildren","node","hasChildren","KendoTreeComponent","isExpanded","item","index","TREE_NODES","TreeDataService","items","i","Number","expanded","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChartComponent } from './chart/chart.component';\nimport { ClarityTreeComponent } from './clarity-tree/clarity-tree.component';\nimport { KendoTreeComponent } from './kendo-tree/kendo-tree.component';\n\n\nconst routes: Routes = [\n  { path: 'clarity', component: ClarityTreeComponent },\n  { path: 'kendo', component: KendoTreeComponent },\n  { path: 'chart', component: ChartComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'h5-tree-compare';\n}\n","<ul class=\"nav\" role=\"tablist\">\n  <li role=\"presentation\" class=\"nav-item\">\n      <button id=\"tab1\" class=\"btn btn-link nav-link\" type=\"button\" routerLink=\"/clarity\" routerLinkActive=\"active\">Clarity</button>\n  </li>\n  <li role=\"presentation\" class=\"nav-item\">\n      <button id=\"tab2\" class=\"btn btn-link nav-link\" type=\"button\" routerLink=\"/kendo\" routerLinkActive=\"active\">Kendo</button>\n  </li>\n  <li role=\"presentation\" class=\"nav-item\">\n      <button id=\"tab3\" class=\"btn btn-link nav-link\" type=\"button\" routerLink=\"/chart\" routerLinkActive=\"active\">Chart</button>\n  </li>\n</ul>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ClarityModule } from '@clr/angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TreeViewModule } from '@progress/kendo-angular-treeview';\nimport { KendoTreeComponent } from './kendo-tree/kendo-tree.component';\nimport { ClarityTreeComponent } from './clarity-tree/clarity-tree.component';\nimport { TreeDataService, TREE_NODES } from './tree-data.service';\nimport { HighchartsChartModule } from 'highcharts-angular';\nimport { ChartComponent } from './chart/chart.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    KendoTreeComponent,\n    ClarityTreeComponent,\n    ChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ClarityModule,\n    BrowserAnimationsModule,\n    TreeViewModule,\n    HighchartsChartModule,\n    HttpClientModule,\n  ],\n  providers: [TreeDataService, { provide: TREE_NODES, useValue: '1000'} ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\n\nimport * as Highcharts from 'highcharts';\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css']\n})\nexport class ChartComponent {\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.http.get('assets/data.json').subscribe((results: any[]) => {\n      const kendoCreate = [];\n      const clarityCreate = [];\n      const kendoExpand = [];\n      const clarityExpand = [];\n      results.forEach(result => {\n        result.count = parseInt(result.count);\n        if (result.type === 'Clarity') {\n          if (result.expand) {\n            clarityExpand.push(result);\n          } else {\n            clarityCreate.push(result);\n          }\n        } else {\n          if (result.expand) {\n            kendoExpand.push(result);\n          } else {\n            kendoCreate.push(result);\n          }\n        }\n      });\n      console.log(kendoCreate, kendoExpand, clarityExpand, clarityCreate);\n      console.log(kendoCreate.map(value => value.time))\n\n      this.chartOptions.series = [\n      {\n        name: 'Kendo Create',\n        type: 'line',\n        data: kendoCreate.sort((a, b) => a.count - b.count).map(value => value.time)\n      },\n      {\n        name: 'Kendo Expand',\n        type: 'line',\n        data: kendoExpand.sort((a, b) => a.count - b.count).map(value => value.time)\n      },\n      {\n        name: 'Clarity Create',\n        type: 'line',\n        data: clarityCreate.sort((a, b) => a.count - b.count).map(value => value.time)\n      },\n      {\n        name: 'Clarity Expand',\n        type: 'line',\n        data: clarityExpand.sort((a, b) => a.count - b.count).map(value => value.time)\n      },\n    ]\n    });\n    this.updateFlag = true;\n  }\n\n  Highcharts: typeof Highcharts = Highcharts; // required\n  chartConstructor: string = 'chart'; // optional string, defaults to 'chart'\n  chartOptions: Highcharts.Options = { \n    series: [],\n    title: {\n      text: 'Render Times for Clarity and Kendo Tree Views'\n    },\n    yAxis: {\n      title: {\n        text: 'Time To Render (ms)'\n      },\n      labels: {\n        formatter: function() {\n          return Math.round(this.value) + 'ms';\n        }\n      }\n    },\n    xAxis: {\n      title: {\n        text: 'Number of Nodes'\n      },\n      categories: ['1000', '3000', '5000', '10000'],\n    },\n    plotOptions: {\n      line: {\n          dataLabels: {\n              enabled: true\n          }\n      }\n  },\n  }; // required\n  chartCallback: Highcharts.ChartCallbackFunction = function (chart) {  } // optional function, defaults to null\n  updateFlag: boolean = false; // optional boolean\n  oneToOneFlag: boolean = true; // optional boolean, defaults to false\n  runOutsideAngular: boolean = false; // optional boolean, defaults to false\n\n}\n","<h1>Kendo Clarity Tree Comparison</h1>\n\n<p>There are 4 series of tests run, each with different total nodes. Each test is run with 1000, 3000, 5000, and 10000 nodes. This test is setup with both using a basic asynchronos tree view with the same numer of nodes and nothing else.</p>\n\n<ol>\n  <li>Clarity Create - This test calculates the total time to render a Clarity tree with a certain numer of top level nodes.</li>\n  <li>Kendo Create - This test calculates the total time to render a Kendo tree with a certain numer of top level nodes.</li>\n  <li>Clarity Expand - This test calculates the total time to render a Clarity tree and then expand the first level with, each with a certain numer of top level nodes.</li>\n  <li>Kendo Expand - This test calculates the total time to render a Kendo tree and then expand the first level with, each with a certain numer of top level nodes.</li>\n</ol>\n\n<highcharts-chart \n  *ngIf=\"chartOptions.series.length\"\n  [Highcharts]=\"Highcharts\"\n\n  [constructorType]=\"chartConstructor\"\n  [options]=\"chartOptions\"\n  [callbackFunction]=\"chartCallback\"\n\n  [(update)]=\"updateFlag\"\n  [oneToOne]=\"oneToOneFlag\"\n\n  style=\"width: 100%; height: 400px; display: block;\"\n></highcharts-chart>\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TreeDataService } from '../tree-data.service';\n\n@Component({\n  selector: 'app-clarity-tree',\n  templateUrl: './clarity-tree.component.html',\n  styleUrls: ['./clarity-tree.component.css'],\n})\nexport class ClarityTreeComponent {\n\n  data = this.service.getItems();\n  expand = false;\n\n  constructor(private service: TreeDataService) {\n    // setTimeout(() => {\n    //   this.expand = true;\n    // }, 5000);\n  }\n\n  fetchChildren = (node: any): Observable<any[]> => this.service.getItems(node);\n\n  hasChildren = (node: any): boolean => true;\n\n}\n","<h1>Clarity Tree</h1>\n\n<clr-tree [clrLazy]=\"true\" [@.disabled]=\"false\">\n  <clr-tree-node \n    *clrRecursiveFor=\"let item of data | async; getChildren: fetchChildren\" \n    [clrExpanded]=\"item.id === 1 && expand === true\"\n    [clrExpandable]=\"true\"\n  >\n      {{item.text}}\n  </clr-tree-node>\n</clr-tree>","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TreeDataService } from '../tree-data.service';\n\n@Component({\n  selector: 'app-kendo-tree',\n  templateUrl: './kendo-tree.component.html',\n  styleUrls: ['./kendo-tree.component.css'],\n})\nexport class KendoTreeComponent {\n\n  data = this.service.getItems();\n  expand = false;\n\n  constructor(private service: TreeDataService) {\n    // setTimeout(() => {\n    //   this.expanded = true;\n    // }, 5000);\n  }\n\n  fetchChildren = (node: any): Observable<any[]> => this.service.getItems();\n\n  hasChildren = (node: any): boolean => true;\n\n  isExpanded = (item, index) => {\n    return index === \"0\" && this.expand;\n  }\n\n}\n","<h1>Kendo Tree</h1>\n\n<kendo-treeview\n  kendoTreeViewExpandable\n  [nodes]=\"data | async\"\n  textField=\"text\"  \n  [isExpanded]=\"isExpanded\"\n  [children]=\"fetchChildren\"\n  [hasChildren]=\"hasChildren\"\n></kendo-treeview>","import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nexport const TREE_NODES = new InjectionToken<string>('1000');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TreeDataService {\n\n  constructor(@Inject(TREE_NODES) private count: string) {}\n\n  getItems(node?): Observable<any[]> { \n    const items = [];\n    for (let i = 1; i <= Number.parseInt(this.count); i++) {\n      const id = (node) ? `${node.id}${i}` : i;\n        items.push({text: \"Item \" + i, expanded: false, id});\n    }\n    return of(items);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}