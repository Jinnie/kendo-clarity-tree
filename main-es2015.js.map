{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chart/chart.component.ts","./src/app/chart/chart.component.html","./src/app/clarity-tree/clarity-tree.component.ts","./src/app/clarity-tree/clarity-tree.component.html","./src/app/kendo-tree/kendo-tree.component.ts","./src/app/kendo-tree/kendo-tree.component.html","./src/app/tree-data.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChartComponent } from './chart/chart.component';\nimport { ClarityTreeComponent } from './clarity-tree/clarity-tree.component';\nimport { KendoTreeComponent } from './kendo-tree/kendo-tree.component';\n\n\nconst routes: Routes = [\n  { path: 'clarity', component: ClarityTreeComponent },\n  { path: 'kendo', component: KendoTreeComponent },\n  { path: 'chart', component: ChartComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'h5-tree-compare';\n}\n","<ul class=\"nav\" role=\"tablist\">\n  <li role=\"presentation\" class=\"nav-item\">\n      <button id=\"tab1\" class=\"btn btn-link nav-link\" type=\"button\" routerLink=\"/clarity\" routerLinkActive=\"active\">Clarity</button>\n  </li>\n  <li role=\"presentation\" class=\"nav-item\">\n      <button id=\"tab2\" class=\"btn btn-link nav-link\" type=\"button\" routerLink=\"/kendo\" routerLinkActive=\"active\">Kendo</button>\n  </li>\n  <li role=\"presentation\" class=\"nav-item\">\n      <button id=\"tab3\" class=\"btn btn-link nav-link\" type=\"button\" routerLink=\"/chart\" routerLinkActive=\"active\">Chart</button>\n  </li>\n</ul>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ClarityModule } from '@clr/angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TreeViewModule } from '@progress/kendo-angular-treeview';\nimport { KendoTreeComponent } from './kendo-tree/kendo-tree.component';\nimport { ClarityTreeComponent } from './clarity-tree/clarity-tree.component';\nimport { TreeDataService, TREE_NODES } from './tree-data.service';\nimport { HighchartsChartModule } from 'highcharts-angular';\nimport { ChartComponent } from './chart/chart.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    KendoTreeComponent,\n    ClarityTreeComponent,\n    ChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ClarityModule,\n    BrowserAnimationsModule,\n    TreeViewModule,\n    HighchartsChartModule,\n    HttpClientModule,\n  ],\n  providers: [TreeDataService, { provide: TREE_NODES, useValue: '1000'} ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\n\nimport * as Highcharts from 'highcharts';\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css']\n})\nexport class ChartComponent {\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.http.get('/assets/data.json').subscribe((results: any[]) => {\n      const kendoCreate = [];\n      const clarityCreate = [];\n      const kendoExpand = [];\n      const clarityExpand = [];\n      results.forEach(result => {\n        result.count = parseInt(result.count);\n        if (result.type === 'Clarity') {\n          if (result.expand) {\n            clarityExpand.push(result);\n          } else {\n            clarityCreate.push(result);\n          }\n        } else {\n          if (result.expand) {\n            kendoExpand.push(result);\n          } else {\n            kendoCreate.push(result);\n          }\n        }\n      });\n      console.log(kendoCreate, kendoExpand, clarityExpand, clarityCreate);\n      console.log(kendoCreate.map(value => value.time))\n\n      this.chartOptions.series = [\n      {\n        name: 'Kendo Create',\n        type: 'line',\n        data: kendoCreate.sort((a, b) => a.count - b.count).map(value => value.time)\n      },\n      {\n        name: 'Kendo Expand',\n        type: 'line',\n        data: kendoExpand.sort((a, b) => a.count - b.count).map(value => value.time)\n      },\n      {\n        name: 'Clarity Create',\n        type: 'line',\n        data: clarityCreate.sort((a, b) => a.count - b.count).map(value => value.time)\n      },\n      {\n        name: 'Clarity Expand',\n        type: 'line',\n        data: clarityExpand.sort((a, b) => a.count - b.count).map(value => value.time)\n      },\n    ]\n    });\n    this.updateFlag = true;\n  }\n\n  Highcharts: typeof Highcharts = Highcharts; // required\n  chartConstructor: string = 'chart'; // optional string, defaults to 'chart'\n  chartOptions: Highcharts.Options = { \n    series: [],\n    title: {\n      text: 'Render Times for Clarity and Kendo Tree Views'\n    },\n    yAxis: {\n      title: {\n        text: 'Time To Render (ms)'\n      },\n      labels: {\n        formatter: function() {\n          return Math.round(this.value) + 'ms';\n        }\n      }\n    },\n    xAxis: {\n      title: {\n        text: 'Number of Nodes'\n      },\n      categories: ['1000', '3000', '5000', '10000'],\n    },\n    plotOptions: {\n      line: {\n          dataLabels: {\n              enabled: true\n          }\n      }\n  },\n  }; // required\n  chartCallback: Highcharts.ChartCallbackFunction = function (chart) {  } // optional function, defaults to null\n  updateFlag: boolean = false; // optional boolean\n  oneToOneFlag: boolean = true; // optional boolean, defaults to false\n  runOutsideAngular: boolean = false; // optional boolean, defaults to false\n\n}\n","<h1>Kendo Clarity Tree Comparison</h1>\n\n<p>There are 4 series of tests run, each with different total nodes. Each test is run with 1000, 3000, 5000, and 10000 nodes. This test is setup with both using a basic asynchronos tree view with the same numer of nodes and nothing else.</p>\n\n<ol>\n  <li>Clarity Create - This test calculates the total time to render a Clarity tree with a certain numer of top level nodes.</li>\n  <li>Kendo Create - This test calculates the total time to render a Kendo tree with a certain numer of top level nodes.</li>\n  <li>Clarity Expand - This test calculates the total time to render a Clarity tree and then expand the first level with, each with a certain numer of top level nodes.</li>\n  <li>Kendo Expand - This test calculates the total time to render a Kendo tree and then expand the first level with, each with a certain numer of top level nodes.</li>\n</ol>\n\n<highcharts-chart \n  *ngIf=\"chartOptions.series.length\"\n  [Highcharts]=\"Highcharts\"\n\n  [constructorType]=\"chartConstructor\"\n  [options]=\"chartOptions\"\n  [callbackFunction]=\"chartCallback\"\n\n  [(update)]=\"updateFlag\"\n  [oneToOne]=\"oneToOneFlag\"\n\n  style=\"width: 100%; height: 400px; display: block;\"\n></highcharts-chart>\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TreeDataService } from '../tree-data.service';\n\n@Component({\n  selector: 'app-clarity-tree',\n  templateUrl: './clarity-tree.component.html',\n  styleUrls: ['./clarity-tree.component.css'],\n})\nexport class ClarityTreeComponent {\n\n  data = this.service.getItems();\n  expand = false;\n\n  constructor(private service: TreeDataService) {\n    // setTimeout(() => {\n    //   this.expand = true;\n    // }, 5000);\n  }\n\n  fetchChildren = (node: any): Observable<any[]> => this.service.getItems(node);\n\n  hasChildren = (node: any): boolean => true;\n\n}\n","<h1>Clarity Tree</h1>\n\n<clr-tree [clrLazy]=\"true\" [@.disabled]=\"false\">\n  <clr-tree-node \n    *clrRecursiveFor=\"let item of data | async; getChildren: fetchChildren\" \n    [clrExpanded]=\"item.id === 1 && expand === true\"\n    [clrExpandable]=\"true\"\n  >\n      {{item.text}}\n  </clr-tree-node>\n</clr-tree>","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TreeDataService } from '../tree-data.service';\n\n@Component({\n  selector: 'app-kendo-tree',\n  templateUrl: './kendo-tree.component.html',\n  styleUrls: ['./kendo-tree.component.css'],\n})\nexport class KendoTreeComponent {\n\n  data = this.service.getItems();\n  expand = false;\n\n  constructor(private service: TreeDataService) {\n    // setTimeout(() => {\n    //   this.expanded = true;\n    // }, 5000);\n  }\n\n  fetchChildren = (node: any): Observable<any[]> => this.service.getItems();\n\n  hasChildren = (node: any): boolean => true;\n\n  isExpanded = (item, index) => {\n    return index === \"0\" && this.expand;\n  }\n\n}\n","<h1>Kendo Tree</h1>\n\n<kendo-treeview\n  kendoTreeViewExpandable\n  [nodes]=\"data | async\"\n  textField=\"text\"  \n  [isExpanded]=\"isExpanded\"\n  [children]=\"fetchChildren\"\n  [hasChildren]=\"hasChildren\"\n></kendo-treeview>","import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nexport const TREE_NODES = new InjectionToken<string>('1000');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TreeDataService {\n\n  constructor(@Inject(TREE_NODES) private count: string) {}\n\n  getItems(node?): Observable<any[]> { \n    const items = [];\n    for (let i = 1; i <= Number.parseInt(this.count); i++) {\n      const id = (node) ? `${node.id}${i}` : i;\n        items.push({text: \"Item \" + i, expanded: false, id});\n    }\n    return of(items);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}